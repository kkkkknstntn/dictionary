server {
    listen 80;
    server_name www.sgucrs.ru sgucrs.ru;
    client_max_body_size 100M;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.sgucrs.ru sgucrs.ru;

    ssl_certificate /etc/letsencrypt/live/sgucrs.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sgucrs.ru/privkey.pem;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # location /minio/ {
    #         proxy_pass https://minio:9000/;
    #         proxy_set_header Host $host;
    #         proxy_ssl_verify off;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         client_max_body_size 50M;
    #     }

    # location /minio-console/ {
    #         proxy_pass https://minio:9001/;
    #         proxy_set_header Host $host;
    #         proxy_ssl_verify off;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Telegram-Init-Data $http_x_telegram_init_data;
        proxy_set_header X-Telegram-User-ID $http_x_telegram_user_id;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }


    location /api/ {
        proxy_pass http://backend:8080/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_pass_header Set-Cookie;

        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,X-Telegram-Init-Data, X-Telegram-User-Id, DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,X-Telegram-Init-Data,X-Telegram-User-Id' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}
